plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'redis.nyc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'  
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot 기본 테스트 라이브러리
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'          // JUnit 5 의존성
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'        // JUnit 5 엔진 의존성
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

// Spring Boot의 main 클래스를 설정합니다.
springBoot {
    mainClass = 'redis.nyc.redis.RedisClientApp'  // 또는 RedisApplication
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    enabled = true
}
